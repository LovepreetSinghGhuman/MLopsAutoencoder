name: Build_and_Deploy

on:
  push:
    branches:
      - main

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}  # e.g., fraudacr12345.azurecr.io
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
  IMAGE_NAME: fraud-detector
  RESOURCE_GROUP: fraud-rg
  AML_WORKSPACE: fraud-workspace
  CLUSTER_NAME: fraudAKSCluster
  DEPLOYMENT_NAME: fraud-detector-deployment
  CONTAINER_NAME: fraud-detector
  NAMESPACE: default

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Azure ML CLI
        run: |
          pip install --upgrade pip
          pip install azure-ai-ml

      - name: Submit Azure ML training job
        id: submit_job
        run: |
          az extension add -n ml -y
          JOB_NAME=$(az ml job create --file deployment/train-job.yaml --resource-group $RESOURCE_GROUP --workspace-name $AML_WORKSPACE --query name -o tsv)
          echo "job_name=$JOB_NAME" >> $GITHUB_OUTPUT

      - name: Wait for Azure ML job to complete
        run: |
          az ml job wait --name ${{ steps.submit_job.outputs.job_name }} --resource-group $RESOURCE_GROUP --workspace-name $AML_WORKSPACE

      - name: Download model artifacts from Azure ML job outputs
        run: |
          az ml job download --name ${{ steps.submit_job.outputs.job_name }} --resource-group $RESOURCE_GROUP --workspace-name $AML_WORKSPACE --output ./models --overwrite

      - name: Docker login to ACR
        run: |
          echo "$ACR_PASSWORD" | docker login "$ACR_LOGIN_SERVER" -u "$ACR_USERNAME" --password-stdin

      - name: Build and push Docker image
        run: |
          IMAGE_TAG=$ACR_LOGIN_SERVER/$IMAGE_NAME:latest
          docker build -f deployment/Dockerfile -t $IMAGE_TAG .
          docker push $IMAGE_TAG

  deploy-to-aks:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.RESOURCE_GROUP }}

      - name: Update Kubernetes deployment image
        run: |
          IMAGE_TAG=$ACR_LOGIN_SERVER/$IMAGE_NAME:latest
          kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=$IMAGE_TAG --namespace $NAMESPACE